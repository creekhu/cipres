<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE pise SYSTEM "PARSER/pise.dtd" [
<!ENTITY emboss_init SYSTEM "XMLDIR/emboss.xml">
]>

<pise>

<head>
<title>SIRNA</title>
<description>Finds siRNA duplexes in mRNA (EMBOSS)</description>
<category>nucleic:composition</category>
<doclink>http://bioweb.pasteur.fr/docs/EMBOSS/sirna.html</doclink>
</head>

<command>sirna</command>

<parameters>

&emboss_init;


<parameter type="Paragraph">
<paragraph>
<name>input</name>
	<prompt>Input section</prompt>

<parameters>
	<parameter type="Sequence" ismandatory="1" issimple="1" ishidden="0">
	<name>sequence</name>
	<attributes>
		<prompt>sequence -- DNA [sequences] (-sequence)</prompt>
		<format>
			<language>perl</language>
			<code>" -sequence=$value"</code>
		</format>
		<group>1</group>
		<seqtype><value>dna</value></seqtype>
		<seqfmt>
			<value>2</value>
			<value>4</value>
			<value>14</value>
		</seqfmt>
		<pipe>
			<pipetype>seqsfile</pipetype>
				<language>perl</language>
				<code>1</code>
		</pipe>
	</attributes>
	</parameter>


	<parameter type="Paragraph">
	<paragraph>
	<name>seqinsection</name>
		<prompt>Sequence input options</prompt>

	<parameters>
		<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
		<name>poliii</name>
		<attributes>
			<prompt>Select probes for Pol III expression vectors (-poliii)</prompt>
			<vdef>
				<value>0</value>
			</vdef>
			<format>
				<language>perl</language>
				<code>($value)? " -poliii" : ""</code>
			</format>
			<group>2</group>
			<comment>
				<value>This option allows you to select only the 21 base probes that start with a purine and so can be expressed from Pol III expression vectors. This is the NARN(17)YNN pattern that has been suggested by Tuschl et al.</value>
			</comment>
		</attributes>
		</parameter>

		<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
		<name>aa</name>
		<attributes>
			<prompt>Select only regions that start with AA (-aa)</prompt>
			<vdef>
				<value>0</value>
			</vdef>
			<format>
				<language>perl</language>
				<code>($value)? " -aa" : ""</code>
			</format>
			<group>3</group>
			<comment>
				<value>This option allows you to select only those 23 base regions that start with AA. If this option is not selected then regions that start with AA will be favoured by giving them a higher score, but regions that do not start with AA will also be reported.</value>
			</comment>
		</attributes>
		</parameter>

		<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
		<name>tt</name>
		<attributes>
			<prompt>Select only regions that end with TT (-tt)</prompt>
			<vdef>
				<value>0</value>
			</vdef>
			<format>
				<language>perl</language>
				<code>($value)? " -tt" : ""</code>
			</format>
			<group>4</group>
			<comment>
				<value>This option allows you to select only those 23 base regions that end with TT. If this option is not selected then regions that end with TT will be favoured by giving them a higher score, but regions that do not end with TT will also be reported.</value>
			</comment>
		</attributes>
		</parameter>

		<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
		<name>polybase</name>
		<attributes>
			<prompt>Allow regions with 4 repeats of a base (-polybase)</prompt>
			<vdef>
				<value>1</value>
			</vdef>
			<format>
				<language>perl</language>
				<code>($value)? "" : " -nopolybase"</code>
			</format>
			<group>5</group>
			<comment>
				<value>If this option is FALSE then only those 23 base regions that have no repeat of 4 or more of any bases in a row will be reported. No regions will ever be reported that have 4 or more G's in a row.</value>
			</comment>
		</attributes>
		</parameter>

		</parameters>
	</paragraph>
	</parameter>

	</parameters>
</paragraph>
</parameter>


<parameter type="Paragraph">
<paragraph>
<name>output</name>
	<prompt>Output section</prompt>

<parameters>
	<parameter type="OutFile" ismandatory="1" issimple="1" ishidden="0">
	<name>outfile</name>
	<attributes>
		<prompt>outfile (-outfile)</prompt>
		<vdef><value>outfile.out</value></vdef>
		<format>
			<language>perl</language>
			<code>" -outfile=$value"</code>
		</format>
		<group>6</group>
		<comment>
			<value>The output is a table of the forward and reverse parts of the 21 base siRNA duplex. Both the forward and reverse sequences are written 5' to 3', ready to be ordered. The last two bases have been replaced by 'dTdT'. The starting position of the 23 base region and the %GC content is also given. If you wish to see the complete 23 base sequence, then either look at the sequence in the other output file, or use the qualifier '-context' which will display the 23 bases of the forward sequence in this report withthe first two bases in brackets. These first two bases do not form part of the siRNA probe to be ordered.</value>
		</comment>
	</attributes>
	</parameter>

	<parameter type="OutFile" ismandatory="1" issimple="1" ishidden="0">
	<name>outseq</name>
	<attributes>
		<prompt>outseq (-outseq)</prompt>
		<vdef><value>outseq.out</value></vdef>
		<format>
			<language>perl</language>
			<code>" -outseq=$value"</code>
		</format>
		<group>8</group>
		<comment>
			<value>This is a file of the sequences of the 23 base regions that the siRNAs are selected from. You may use it to do searches of mRNA databases (e.g. REFSEQ) to confirm that the probes are unique to the gene you wish to use it on.</value>
		</comment>
		<pipe>
			<pipetype>seqsfile</pipetype>
				<language>perl</language>
				<code>1</code>
		</pipe>
	</attributes>
	</parameter>

	<parameter type="Excl" issimple="1">
	<name>outseq_sformat</name>
	<attributes>
		<prompt>Output format for: outseq</prompt>
		<vlist>
			<value>fasta</value>
			<label>fasta</label>
			<value>gcg</value>
			<label>gcg</label>
			<value>phylip</value>
			<label>phylip</label>
			<value>embl</value>
			<label>embl</label>
			<value>swiss</value>
			<label>swiss</label>
			<value>ncbi</value>
			<label>ncbi</label>
			<value>nbrf</value>
			<label>nbrf</label>
			<value>genbank</value>
			<label>genbank</label>
			<value>ig</value>
			<label>ig</label>
			<value>codata</value>
			<label>codata</label>
			<value>strider</value>
			<label>strider</label>
			<value>acedb</value>
			<label>acedb</label>
			<value>staden</value>
			<label>staden</label>
			<value>text</value>
			<label>text</label>
			<value>fitch</value>
			<label>fitch</label>
			<value>msf</value>
			<label>msf</label>
			<value>clustal</value>
			<label>clustal</label>
			<value>phylip</value>
			<label>phylip</label>
			<value>phylip3</value>
			<label>phylip3</label>
			<value>asn1</value>
			<label>asn1</label>
		</vlist>
		<vdef><value>fasta</value></vdef>
		<format>
			<language>perl</language>
			<code>" -osformat=$value"</code>
		</format>
		<group>9</group>
	</attributes>
	</parameter>
	<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
	<name>context</name>
	<attributes>
		<prompt>Show the two bases before the output 21 base probe (-context)</prompt>
		<vdef>
			<value>0</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>($value)? " -context" : ""</code>
		</format>
		<group>10</group>
		<comment>
			<value>The output report file gives the sequences of the 21 base siRNA regions ready to be ordered. This does not give you an indication of the 2 bases before the 21 bases. It is often interesting to see which of the suggested possible probe regions have an 'AA' in front of them (i.e. it is useful to see which of the 23 base regions start with an 'AA'). This option displays the whole 23 bases of the region with the first two bases in brackets, e.g. '(AA)' to give you some context for the probe region. YOU SHOULD NOT INCLUDE THE TWO BASES IN BRACKETS WHEN YOU PLACE AN ORDER FOR THE PROBES.</value>
		</comment>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>

<parameter type="String" ishidden="1">
<name>auto</name>
<attributes>
	<format>
		<language>perl</language>
		<code>" -auto -stdout"</code>
	</format>
	<group>11</group>
</attributes>
</parameter>

</parameters>
</pise>
