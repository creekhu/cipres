<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE pise SYSTEM "PARSER/pise.dtd" [
<!ENTITY emboss_init SYSTEM "XMLDIR/emboss.xml">
]>

<pise>

<head>
<title>POLYDOT</title>
<description>Displays all-against-all dotplots of a set of sequences (EMBOSS)</description>
<category>alignment:dot plots</category>
<doclink>http://bioweb.pasteur.fr/docs/EMBOSS/polydot.html</doclink>
</head>

<command>polydot</command>

<parameters>

&emboss_init;


<parameter type="Paragraph">
<paragraph>
<name>input</name>
	<prompt>Input section</prompt>

<parameters>
	<parameter type="Sequence" ismandatory="1" issimple="1" ishidden="0">
	<name>sequences</name>
	<attributes>
		<prompt>sequences -- any [set of sequences] (-sequences)</prompt>
		<format>
			<language>perl</language>
			<code>" -sequences=$value -sformat=fasta"</code>
		</format>
		<group>1</group>
		<comment>
			<value>File containing a sequence alignment</value>
		</comment>
		<seqtype><value>any</value></seqtype>
		<seqfmt>
			<value>8</value>
		</seqfmt>
		<pipe>
			<pipetype>seqsfile</pipetype>
				<language>perl</language>
				<code>1</code>
		</pipe>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>


<parameter type="Paragraph">
<paragraph>
<name>required</name>
	<prompt>Required section</prompt>

<parameters>
	<parameter type="Integer" ismandatory="1" issimple="1" ishidden="0">
	<name>wordsize</name>
	<attributes>
		<prompt>Word size (-wordsize)</prompt>
		<vdef>
			<value>6</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>" -wordsize=$value"</code>
		</format>
		<group>2</group>
		<scalemin><value>2</value></scalemin>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>


<parameter type="Paragraph">
<paragraph>
<name>output</name>
	<prompt>Output section</prompt>

<parameters>

	<parameter type="Paragraph">
	<paragraph>
	<name>datasection</name>
		<prompt>Data output section</prompt>

	<parameters>
		<parameter type="Excl" ismandatory="0" issimple="0" ishidden="0">
		<name>graph</name>
		<attributes>
			<prompt>graph [device to be displayed on] (-graph)</prompt>
				<vlist>
					<value>x11</value>
					<label>x11</label>
					<value>hp7470</value>
					<label>hp7470</label>
					<value>postscript</value>
					<label>postscript</label>
					<value>cps</value>
					<label>cps</label>
					<value>hp7580</value>
					<label>hp7580</label>
					<value>null</value>
					<label>null</label>
					<value>data</value>
					<label>data</label>
					<value>colourps</value>
					<label>colourps</label>
					<value>text</value>
					<label>text</label>
					<value>none</value>
					<label>none</label>
					<value>tek4107t</value>
					<label>tek4107t</label>
					<value>tekt</value>
					<label>tekt</label>
					<value>xwindows</value>
					<label>xwindows</label>
					<value>hpgl</value>
					<label>hpgl</label>
					<value>xterm</value>
					<label>xterm</label>
					<value>meta</value>
					<label>meta</label>
					<value>ps</value>
					<label>ps</label>
					<value>tek</value>
					<label>tek</label>
					<value>png</value>
					<label>png</label>
					<value>tektronics</value>
					<label>tektronics</label>
				</vlist>
			<vdef><value>postscript</value></vdef>
			<format>
				<language>perl</language>
				<code>($value)? " -graph=$value" : ""</code>
			</format>
			<group>3</group>
		</attributes>
		</parameter>

		</parameters>
	</paragraph>
	</parameter>

	<parameter type="Integer" ismandatory="0" issimple="0" ishidden="0">
	<name>gap</name>
	<attributes>
		<prompt>Gap (in residues) between dotplots (-gap)</prompt>
		<vdef>
			<value>10</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>(defined $value &amp;&amp; $value != $vdef)? " -gap=$value" : ""</code>
		</format>
		<group>4</group>
		<comment>
			<value>This specifies the size of the gap that is used to separate the individual dotplots in the display. The size is measured in residues, as displayed in the output.</value>
		</comment>
	</attributes>
	</parameter>

	<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
	<name>boxit</name>
	<attributes>
		<prompt>Draw a box around each dotplot (-boxit)</prompt>
		<vdef>
			<value>1</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>($value)? "" : " -noboxit"</code>
		</format>
		<group>5</group>
	</attributes>
	</parameter>

	<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
	<name>dumpfeat</name>
	<attributes>
		<prompt>Dump all matches as feature files (-dumpfeat)</prompt>
		<vdef>
			<value>0</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>($value)? " -dumpfeat" : ""</code>
		</format>
		<group>6</group>
	</attributes>
	</parameter>

	<parameter type="String" ismandatory="0" issimple="0" ishidden="0">
	<name>format</name>
	<attributes>
		<prompt>format to Dump out as (-format)</prompt>
		<vdef>
			<value>gff</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>($value &amp;&amp; $value ne $vdef)? " -format=$value" : ""</code>
		</format>
		<group>7</group>
	</attributes>
	</parameter>

	<parameter type="String" ismandatory="0" issimple="0" ishidden="0">
	<name>ext</name>
	<attributes>
		<prompt>Extension for feature file (-ext)</prompt>
		<vdef>
			<value>gff</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>($value &amp;&amp; $value ne $vdef)? " -ext=$value" : ""</code>
		</format>
		<group>8</group>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>

<parameter type="String" ishidden="1">
<name>auto</name>
<attributes>
	<format>
		<language>perl</language>
		<code>" -auto -stdout"</code>
	</format>
	<group>9</group>
</attributes>
</parameter>
<parameter type="String" ishidden="1">
<name>psouput</name>
<attributes>
	<precond>
		<language>perl</language>
		<code>$graph eq "postscript" || $graph eq "ps" || $graph eq "colourps"  || $graph eq "cps" || $graph eq "png"</code>
	</precond>
	<format>
		<language>perl</language>
		<code>" -goutfile=polydot"</code>
	</format>
	<group>100</group>
</attributes>
</parameter>
<parameter type="Results">
<name>psresults</name>
<attributes>
	<precond>
		<language>perl</language>
		<code>$graph eq "postscript" || $graph eq "ps" || $graph eq "colourps" || $graph eq "cps"</code>
	</precond>
	<filenames>*.ps</filenames>
</attributes>
</parameter>
<parameter type="Results">
<name>metaresults</name>
<attributes>
	<precond>
		<language>perl</language>
		<code>$graph eq "meta"</code>
	</precond>
	<filenames>*.meta</filenames>
</attributes>
</parameter>
<parameter type="Results">
<name>dataresults</name>
<attributes>
	<precond>
		<language>perl</language>
		<code>$graph eq "data"</code>
	</precond>
	<filenames>*.dat</filenames>
</attributes>
</parameter>
<parameter type="Results">
<name>pngresults</name>
<attributes>
	<precond>
		<language>perl</language>
		<code>$graph eq "png"</code>
	</precond>
	<filenames>*.png *.2 *.3</filenames>
</attributes>
</parameter>

</parameters>
</pise>
