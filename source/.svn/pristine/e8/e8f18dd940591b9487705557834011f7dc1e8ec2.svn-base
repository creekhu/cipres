
package org.ngbw.sdk.tool;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.Date;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.globus.gridshib.config.BootstrapConfigLoader;
import org.globus.gridshib.config.SAMLToolsConfigLoader;
import org.globus.gridshib.security.util.GSIUtil;
import org.globus.opensaml11.saml.SAMLAuthenticationStatement;
import org.ietf.jgss.GSSCredential;
import org.teragrid.ncsa.gridshib.security.x509.GatewayCredential;

public class SamlCred
{
	private static final Log log = LogFactory.getLog(SamlCred.class.getName());
	private static String configPath = GlobusConfig.getGlobusDir(); 
	private static boolean initialized = false;

	private static synchronized void initialize() throws Exception
	{
		if (!initialized)
		{
			System.out.println("initializing");
			System.setProperty("org.globus.gridshib.config", configPath + "/gridshib-bootstrap.properties");

			SAMLToolsConfigLoader.load(new File(configPath,  "gridshib-tg-gateway-config.properties"));
			BootstrapConfigLoader.setCoGConfigPathDefault(configPath +  "/cog.properties");
			initialized = true;
		}
	}

	public static GSSCredential getSamlProxy(GSSCredential proxy, int lifetime, String userId, String email, String ip) throws Exception
	{
		initialize();

		log.debug("Creating a saml assertion for: uid='" + userId + "', email='" + email + "', ip='" + ip + "'");
		//create gateway credential
		GatewayCredential samlcred = new GatewayCredential(userId);
		samlcred.addEmailAddress("email");

		String authnMethod = SAMLAuthenticationStatement.AuthenticationMethod_Password;
		//Date authnInstant = new Date(lastLoginTime);

		// Set authnInstant to a second prior to this instant because the credential will be rejected if the
		// date isn't "in the past".
		Date authnInstant = new Date((new Date()).getTime() - 1000);

		samlcred.setAuthnContext(authnMethod, authnInstant, ip);
		samlcred.setCredential(GSIUtil.toGlobusCredential(proxy));
		samlcred.setX509Lifetime(lifetime);

		//convert gateway credential to GSSCredential
		org.globus.gsi.GlobusCredential gp = samlcred.issue();
		GSSCredential samlproxy = GSIUtil.toGSSCredential(gp);

		// START for debugging/logging only
		// logCredential(gp);
		// END for debugging/logging only

		return samlproxy;
	}

	/**
		Dumps the credential but it's unintelligible.  Need to look at it with something like openssl.
	*/
	@SuppressWarnings("unused")
	private static void logCredential(org.globus.gsi.GlobusCredential gp) throws IOException
	{
		ByteArrayOutputStream out = new ByteArrayOutputStream();
		GSIUtil.saveCredential(gp, out);
		log.debug("Credential with saml assertion:" + out.toString());
	}
}

