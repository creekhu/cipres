<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE pise SYSTEM "PARSER/pise.dtd" [
<!ENTITY emboss_init SYSTEM "XMLDIR/emboss.xml">
]>

<pise>

<head>
<title>CHECKTRANS</title>
<description>Reports STOP codons and ORF statistics of a protein (EMBOSS)</description>
<category>protein:composition</category>
<doclink>http://bioweb.pasteur.fr/docs/EMBOSS/checktrans.html</doclink>
</head>

<command>checktrans</command>

<parameters>

&emboss_init;

<parameter type="Sequence" ismandatory="1" issimple="1" ishidden="0">
<name>sequence</name>
<attributes>
	<prompt>sequence -- stopprotein [sequences] (-sequence)</prompt>
	<format>
		<language>perl</language>
		<code>" -sequence=$value -sformat=fasta"</code>
	</format>
	<group>1</group>
	<seqtype><value>stopprotein</value></seqtype>
	<seqfmt>
		<value>8</value>
	</seqfmt>
	<pipe>
		<pipetype>seqsfile</pipetype>
			<language>perl</language>
			<code>1</code>
	</pipe>
</attributes>
</parameter>

<parameter type="Integer" ismandatory="0" issimple="0" ishidden="0">
<name>orfml</name>
<attributes>
	<prompt>Minimum ORF Length to report (-orfml)</prompt>
	<vdef>
		<value>100</value>
	</vdef>
	<format>
		<language>perl</language>
		<code>(defined $value &amp;&amp; $value != $vdef)? " -orfml=$value" : ""</code>
	</format>
	<group>2</group>
	<scalemin><value>1</value></scalemin>
</attributes>
</parameter>

<parameter type="OutFile" ismandatory="1" issimple="1" ishidden="0">
<name>outfile</name>
<attributes>
	<prompt>outfile (-outfile)</prompt>
	<vdef><value>outfile.out</value></vdef>
	<format>
		<language>perl</language>
		<code>" -outfile=$value"</code>
	</format>
	<group>3</group>
</attributes>
</parameter>

<parameter type="OutFile" ismandatory="1" issimple="1" ishidden="0">
<name>outseq</name>
<attributes>
	<prompt>outseq (-outseq)</prompt>
	<vdef><value>outseq.out</value></vdef>
	<format>
		<language>perl</language>
		<code>" -outseq=$value"</code>
	</format>
	<group>4</group>
	<comment>
		<value>Sequence file to hold output ORF sequences</value>
	</comment>
	<pipe>
		<pipetype>seqsfile</pipetype>
			<language>perl</language>
			<code>1</code>
	</pipe>
</attributes>
</parameter>

<parameter type="Excl" issimple="1">
<name>outseq_sformat</name>
<attributes>
	<prompt>Output format for: outseq</prompt>
	<vlist>
		<value>fasta</value>
		<label>fasta</label>
		<value>gcg</value>
		<label>gcg</label>
		<value>phylip</value>
		<label>phylip</label>
		<value>embl</value>
		<label>embl</label>
		<value>swiss</value>
		<label>swiss</label>
		<value>ncbi</value>
		<label>ncbi</label>
		<value>nbrf</value>
		<label>nbrf</label>
		<value>genbank</value>
		<label>genbank</label>
		<value>ig</value>
		<label>ig</label>
		<value>codata</value>
		<label>codata</label>
		<value>strider</value>
		<label>strider</label>
		<value>acedb</value>
		<label>acedb</label>
		<value>staden</value>
		<label>staden</label>
		<value>text</value>
		<label>text</label>
		<value>fitch</value>
		<label>fitch</label>
		<value>msf</value>
		<label>msf</label>
		<value>clustal</value>
		<label>clustal</label>
		<value>phylip</value>
		<label>phylip</label>
		<value>phylip3</value>
		<label>phylip3</label>
		<value>asn1</value>
		<label>asn1</label>
	</vlist>
	<vdef><value>fasta</value></vdef>
	<format>
		<language>perl</language>
		<code>" -osformat=$value"</code>
	</format>
	<group>5</group>
</attributes>
</parameter>
<parameter type="OutFile" ismandatory="1" issimple="1" ishidden="0">
<name>featout</name>
<attributes>
	<prompt>featout -- protein (-featout)</prompt>
	<vdef><value>featout.out</value></vdef>
	<format>
		<language>perl</language>
		<code>" -featout=$value"</code>
	</format>
	<group>6</group>
	<comment>
		<value>File for output features</value>
	</comment>
</attributes>
</parameter>


<parameter type="Excl">
	<name>featout_offormat</name>
	<attributes>
		<prompt>Feature output format (-offormat)</prompt>
		<format>
			<language>perl</language>
			<code>($value)? " -offormat=$value" : "" </code>
		</format>
		<vlist>
			<value>embl</value>
			<label>embl</label>
			<value>gff</value>
			<label>gff</label>
			<value>swiss</value>
			<label>swiss</label>
			<value>pir</value>
			<label>pir</label>
			<value>nbrf</value>
			<label>nbrf</label>
		</vlist>
		<vdef><value>gff</value></vdef>
		<group>6</group>
		</attributes>
</parameter>

<parameter type="Switch" ismandatory="0" issimple="0" ishidden="0">
<name>addlast</name>
<attributes>
	<prompt>Force the sequence to end with an asterisk (-addlast)</prompt>
	<vdef>
		<value>1</value>
	</vdef>
	<format>
		<language>perl</language>
		<code>($value)? "" : " -noaddlast"</code>
	</format>
	<group>7</group>
	<comment>
		<value>An asterisk in the protein sequence indicates the position of a STOP codon. Checktrans assumes that all ORFs end in a STOP codon. Forcing the sequence to end with an asterisk, if there is not one there already, makes checktrans treat the end as a potential ORF. If an asterisk is added, it is not included in the reported count of STOPs.</value>
	</comment>
</attributes>
</parameter>

<parameter type="String" ishidden="1">
<name>auto</name>
<attributes>
	<format>
		<language>perl</language>
		<code>" -auto -stdout"</code>
	</format>
	<group>8</group>
</attributes>
</parameter>

</parameters>
</pise>
