<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE pise SYSTEM "PARSER/pise.dtd" [
<!ENTITY emboss_init SYSTEM "XMLDIR/emboss.xml">
]>

<pise>

<head>
<title>TFSCAN</title>
<description>Scans DNA sequences for transcription factors (EMBOSS)</description>
<category>nucleic:transcription</category>
<doclink>http://bioweb.pasteur.fr/docs/EMBOSS/tfscan.html</doclink>
</head>

<command>tfscan</command>

<parameters>

&emboss_init;


<parameter type="Paragraph">
<paragraph>
<name>input</name>
	<prompt>Input section</prompt>

<parameters>
	<parameter type="Sequence" ismandatory="1" issimple="1" ishidden="0">
	<name>sequence</name>
	<attributes>
		<prompt>sequence -- DNA [sequences] (-sequence)</prompt>
		<format>
			<language>perl</language>
			<code>" -sequence=$value -sformat=fasta"</code>
		</format>
		<group>1</group>
		<seqtype><value>dna</value></seqtype>
		<seqfmt>
			<value>8</value>
		</seqfmt>
		<pipe>
			<pipetype>seqsfile</pipetype>
				<language>perl</language>
				<code>1</code>
		</pipe>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>


<parameter type="Paragraph">
<paragraph>
<name>required</name>
	<prompt>Required section</prompt>

<parameters>
	<parameter type="Excl" ismandatory="1" issimple="1" ishidden="0">
	<name>menu</name>
	<attributes>
		<prompt>Select class -- Transcription Factor Class (-menu)</prompt>
			<vlist>
				<value>F</value>
				<label>fungi</label>
				<value>I</value>
				<label>insect</label>
				<value>P</value>
				<label>plant</label>
				<value>V</value>
				<label>vertebrate</label>
				<value>O</value>
				<label>other</label>
				<value>C</value>
				<label>Custom</label>
			</vlist>
		<vdef>
			<value>V</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>" -menu=$value"</code>
		</format>
		<group>2</group>
	</attributes>
	</parameter>

	<parameter type="String" ismandatory="1" issimple="1" ishidden="0">
	<name>custom</name>
	<attributes>
		<prompt>Name of data file (-custom)</prompt>
			<precond>
				<language>acd</language>
				<code>@($(menu)==C)</code>
			</precond>
		<format>
			<language>perl</language>
			<code>" -custom=$value"</code>
		</format>
		<group>3</group>
	</attributes>
	</parameter>

	<parameter type="Integer" ismandatory="1" issimple="1" ishidden="0">
	<name>mismatch</name>
	<attributes>
		<prompt>Number of mismatches (-mismatch)</prompt>
		<vdef>
			<value>0</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>" -mismatch=$value"</code>
		</format>
		<group>4</group>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>


<parameter type="Paragraph">
<paragraph>
<name>advanced</name>
	<prompt>Advanced section</prompt>

<parameters>
	<parameter type="Integer" ismandatory="0" issimple="0" ishidden="0">
	<name>minlength</name>
	<attributes>
		<prompt>Display matches equal to or above this length (-minlength)</prompt>
		<vdef>
			<value>1</value>
		</vdef>
		<format>
			<language>perl</language>
			<code>(defined $value &amp;&amp; $value != $vdef)? " -minlength=$value" : ""</code>
		</format>
		<group>5</group>
		<scalemin><value>1</value></scalemin>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>


<parameter type="Paragraph">
<paragraph>
<name>output</name>
	<prompt>Output section</prompt>

<parameters>
	<parameter type="OutFile" ismandatory="1" issimple="1" ishidden="0">
	<name>outfile</name>
	<attributes>
		<prompt>outfile (-outfile)</prompt>
		<vdef><value>outfile.out</value></vdef>
		<format>
			<language>perl</language>
			<code>" -outfile=$value"</code>
		</format>
		<group>6</group>
	</attributes>
	</parameter>

	</parameters>
</paragraph>
</parameter>

<parameter type="String" ishidden="1">
<name>auto</name>
<attributes>
	<format>
		<language>perl</language>
		<code>" -auto -stdout"</code>
	</format>
	<group>7</group>
</attributes>
</parameter>

</parameters>
</pise>
